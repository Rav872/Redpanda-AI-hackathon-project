version: '3.7'
services:
  # Redpanda cluster
  redpanda-1:
    image: docker.redpanda.com/vectorized/redpanda:v22.3.5
    container_name: redpanda-1
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '1'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda-1:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      - --advertise-pandaproxy-addr
      - PLAINTEXT://redpanda-1:28082,OUTSIDE://localhost:8082
      - --rpc-addr
      - 0.0.0.0:33145
      - --advertise-rpc-addr
      - redpanda-1:33145
    ports:
      # - 8081:8081
      - 8082:8082
      - 9092:9092
      - 28082:28082
      - 29092:29092
    volumes:
      - "redpanda_data:/redpanda"
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6380:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
  
  model_service:
    build: 
        context: ./
        dockerfile: Dockerfile
    container_name: house-value
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./templates:/app/templates
    environment:
      - REDIS_URL=redis://redis:6379
      - KAFKA_BOOTSTRAP_SERVERS=redpanda-1:29092
    ports:
      - 5001:5001
    tty: true
    depends_on:
      redis:
        condition: service_healthy
      redpanda-1:
        condition: service_started

volumes:
  redpanda_data:
    driver: local
  redis:
    driver: local